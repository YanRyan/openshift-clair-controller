apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: clair-controller

parameters:

- name: CLAIR_DOCKERCFG_SECRET_NAME
  description: "Docker secret from clair ServiceAccount (see with 'oc get secrets')"
  required: true

objects:

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: clair-controller
    name: clair-controller
  spec:
    replicas: 1
    selector:
      app: clair-controller
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: clair-controller
      spec:
        containers:
        - image: caruccio/claircontroller
          imagePullPolicy: Always
          name: clair
          resources:
            limits:
              cpu: 293m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /.docker
            name: dockercfg
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccount: clair
        serviceAccountName: clair
        terminationGracePeriodSeconds: 30
        volumes:
        - name: dockercfg
          secret:
            defaultMode: 420
            secretName: ${CLAIR_DOCKERCFG_SECRET_NAME}
    test: false
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: clair
    name: clair
  spec:
    replicas: 1
    selector:
      app: clair
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: clair
      spec:
        containers:
        - args:
          - -insecure-tls
          image: getupcloud/clair
          imagePullPolicy: Always
          name: clair
          ports:
          - containerPort: 6060
            protocol: TCP
          - containerPort: 6061
            protocol: TCP
          resources:
            limits:
              cpu: 293m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/clair
            name: clair-config
        serviceAccountName: clair
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: clair-config
          name: clair-config
    test: false
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: clair-config
  data:
    config.yaml: |
      # Copyright 2015 clair authors
      #
      # Licensed under the Apache License, Version 2.0 (the "License");
      # you may not use this file except in compliance with the License.
      # You may obtain a copy of the License at
      #
      #     http://www.apache.org/licenses/LICENSE-2.0
      #
      # Unless required by applicable law or agreed to in writing, software
      # distributed under the License is distributed on an "AS IS" BASIS,
      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      # See the License for the specific language governing permissions and
      # limitations under the License.

      # The values specified here are the default values that Clair uses if no configuration file is specified or if the keys are not defined.
      clair:
        database:
          type: pgsql
          options:
            source: postgres://clair:clair@postgres:5432/clair?sslmode=disable
            cacheSize: 16384

        api:
          # API server port
          port: 6060

          # Health server port
          # This is an unencrypted endpoint useful for load balancers to check to healthiness of the clair server.
          healthport: 6061

          # Deadline before an API request will respond with a 503
          timeout: 900s

          # 32-bit URL-safe base64 key used to encrypt pagination tokens
          # If one is not provided, it will be generated.
          # Multiple clair instances in the same cluster need the same value.
          paginationKey:

          # Optional PKI configuration
          # If you want to easily generate client certificates and CAs, try the following projects:
          # https://github.com/coreos/etcd-ca
          # https://github.com/cloudflare/cfssl
          servername:
          cafile:
          keyfile:
          certfile:

        updater:
          # Frequency the database will be updated with vulnerabilities from the default data sources
          # The value 0 disables the updater entirely.
          interval: 2h

        notifier:
          # Number of attempts before the notification is marked as failed to be sent
          attempts: 3

          # Duration before a failed notification is retried
          renotifyInterval: 2h

          http:
            # Optional endpoint that will receive notifications via POST requests
            #endpoint: http://clairnotify:8080

            # Optional PKI configuration
            # If you want to easily generate client certificates and CAs, try the following projects:
            # https://github.com/cloudflare/cfssl
            # https://github.com/coreos/etcd-ca
            servername:
            cafile:
            keyfile:
            certfile:

- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: clair
    name: clairsvc
  spec:
    ports:
    - name: clair-port0
      port: 6060
      protocol: TCP
      targetPort: 6060
    - name: clair-port1
      port: 6061
      protocol: TCP
      targetPort: 6061
    selector:
      app: clair
    sessionAffinity: None
    type: NodePort

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      iconClass: icon-postgresql
      tags: database,postgresql
    creationTimestamp: null
    generation: 1
    labels:
      app: postgres
      template: postgres
    name: postgres
  spec:
    replicas: 1
    selector:
      name: postgres
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgres
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: clair
          - name: POSTGRESQL_PASSWORD
            value: clair
          - name: POSTGRESQL_DATABASE
            value: clair
          image: postgresql
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U postgres -q -d clair -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 293m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgres-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgres
      template: postgres
    name: postgres
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgres
    sessionAffinity: None
    type: ClusterIP
